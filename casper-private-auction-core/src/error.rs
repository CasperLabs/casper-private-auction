use casper_types::ApiError;

pub enum AuctionError {
    EarlyFinalize = 0,
    InvalidCaller = 1,
    LateBid = 2,
    BidTooLow = 3,
    AlreadyFinal = 4,
    BadState = 5,
    NoBid = 6,
    LateCancellation = 7,
    UnknownFormat = 8,
    InvalidTimes = 9,
    InvalidPrices = 10,
    EarlyBid = 11,
    InvalidBeneficiary = 12,
    BadKey = 13,
    InvalidcommissionProperty = 14,
    CommissionAccountIncorrectSerialization = 15,
    CommissionRateIncorrectSerialization = 16,
    CommissionTooManyShares = 17,
    KYCError = 18,
    BidBelowReserve = 19,
    NewBidLower = 20,
    InvalidCallStackLength = 21,
    CannotCancelAuction = 22,
    DisallowedMiddleware = 23,
    UnreachableDeadEnd = 24,
    BidReturnLowest = 25,
    TransferBidToAuction = 26,
    CallStackTooShort = 27,
    AuctionEndReturnBids = 28,
    TransferMarketPlaceShare = 29,
    TransferCommissionShare = 30,
    TransferBeneficiaryShare = 31,
    AuctionCancelReturnBid = 32,
    CannotReadKey = 33,
    NamedKeyNotFound = 34,
    KeyNotAccount = 35,
    CommissionActorSplit = 36,
    CommissionPropertySplit = 37,
    MismatchedCommissionAccount = 38,
    MismatchedCommissionRate = 39,
    CannotCreateDictionary = 40,
    KeyNotHash = 41,
    DictionaryKeyNotFound = 42,
    DictionaryKeyNotURef = 43,
    DictionaryGetFail = 44,
    DictionaryGetFailLen = 45,
    DictionaryGetNoValueLen = 46,
    DictionaryGetFailGetByIndex = 47,
    DictionaryGetNoValueGetByIndex = 48,
    DictionaryGetFailGetByKey = 49,
    DictionaryGetNoValueGetByKey = 50,
    DictionaryGetFailBidsGet = 51,
    DictionaryGetNoValueBidsGet = 52,
    KeyNotUref = 53,
}

impl From<AuctionError> for ApiError {
    fn from(err: AuctionError) -> ApiError {
        ApiError::User(err as u16)
    }
}
